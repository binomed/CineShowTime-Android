<?xml 
version="1.0" encoding="utf-8"?>
<!--
/*
 * Copyright (C) 2011 Binomed (http://blog.binomed.fr)
 *
 * Licensed under the Eclipse Public License - v 1.0;
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.eclipse.org/legal/epl-v10.html
 *
 * THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE PUBLIC 
 * LICENSE ("AGREEMENT"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THE PROGRAM 
 * CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.
 */ 
 -->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
      package="com.binomed.showtime" 
      android:installLocation="auto"
      android:versionCode="34" android:versionName="3.0.3">
      
     <supports-screens
          android:largeScreens="true"
          android:normalScreens="true"
          android:smallScreens="true"
          android:anyDensity="true" />
    <application android:label="@string/app_name" 
     		android:debuggable="true" 
     		android:theme="@style/Theme.GreenDroid.NoTitleBar" android:name=".android.CineShowTimeApplication" android:icon="@drawable/ic_launcher">
        <activity android:label="@string/app_name" android:name=".android.screen.main.SplashScreen" android:icon="@drawable/ic_launcher">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".android.screen.main.CineShowTimeMainActivity" android:windowSoftInputMode="stateVisible|adjustResize"></activity>
    	<activity android:name=".android.screen.results.CineShowTimeResultsActivity"></activity>
    	<activity android:name=".android.screen.results.tablet.CineShowTimeResultsTabletCalendarActivity"></activity>
    	<activity android:name=".android.screen.results.tablet.CineShowTimeResultsTabletActivity"></activity>
		<service android:name=".android.screen.results.CineShowTimeResultsService"></service>
		<!--<activity android:name=".android.movieactivity.CineShowTimeMovieActivity" android:launchMode="singleInstance"></activity>-->
		<activity android:name=".android.screen.movie.CineShowTimeMovieActivity" ></activity>
		<activity android:name=".android.screen.moviea.EmptyActivity"></activity>
		<service android:name=".android.screen.movie.CineShowTimeMovieService"></service>
		<activity android:name=".android.screen.pref.CineShowTimePreferencesActivity"></activity>
		<service android:name=".android.service.CineShowCleanFileService"></service>
		<service android:name=".android.service.CineShowDBGlobalService"></service>
		
		<service android:name=".android.widget.CineShowTimeWidgetService"/>
		<service android:name=".android.widget.CineShowTimeWidgetServiceLeft"/>
		<service android:name=".android.widget.CineShowTimeWidgetServiceRight"/>
		<service android:name=".android.widget.CineShowTimeWidgetServiceRefresh"/>
		<service android:name=".android.widget.CineShowTimeWidgetServiceOpenResults"/>
		<service android:name=".android.widget.CineShowTimeWidgetServiceOpenMovie"/>
		<service android:name=".android.widget.CineShowTimeWidgetServiceOpenMovie1"/>
		<activity android:name=".android.screen.widget.results.CineShowTimeResultsWidgetActivity" />
		<activity android:name=".android.screen.widget.search.CineShowTimeWidgetConfigureActivity">
			<intent-filter>
				<action android:name="android.appwidget.action.APPWIDGET_CONFIGURE">
				</action>
			</intent-filter>
		</activity>
		<receiver android:name=".android.widget.CineShowtimeWidget" android:label="@string/widget_name_2x2">
			<intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>
            <meta-data android:name="android.appwidget.provider" android:resource="@xml/widget_one" />
		</receiver>
		
		<!-- AddMob -->
		<activity android:name="com.google.ads.AdActivity"
              android:configChanges="keyboard|keyboardHidden|orientation"/>
	</application>
    <uses-sdk android:minSdkVersion="4" android:targetSdkVersion="11"/>
    <!-- Write image on sd -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"></uses-permission>
	<!-- GPS Location -->
	<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"></uses-permission>
	<!-- Access net -->
	<uses-permission android:name="android.permission.INTERNET"></uses-permission>
	<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
	<!-- Check calendar for adding event -->
	<uses-permission android:name="android.permission.READ_CALENDAR"></uses-permission>
	<uses-permission android:name="android.permission.WRITE_CALENDAR"></uses-permission>
	<!-- ShyHook needs -->
	<!-- used to communicate with Skyhook's servers -->
	<!-- enables WiFi, if disabled, for the duration of a location request -->
	<uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
	<!-- used to obtain information about the WiFi environment -->
	<uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
	<!-- used to obtain cell tower ID -->
	<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
	<uses-permission android:name="android.permission.ACCESS_COARSE_UPDATES" />
	<!-- used to access GPS location, for XPS functionality -->
	<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
	<uses-permission android:name="android.permission.WAKE_LOCK" />
</manifest> 